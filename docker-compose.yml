version: '3.8'

volumes:
    postgres:
    pgadmin:

services:
  # These are the configurations for our Node app
  # When Docker Compose starts this container it will automatically
  # use the Dockerfile in the directory to configure it
  app:
    build: .
    depends_on:
      # Our app does not work without our database
      # so this ensures our database is loaded first
      - postgres
    ports:
      - "8080:8080"
    volumes:
      # Maps our current project directory `.` to
      # our working directory in the container
      - ./:/usr/src/app/
      # node_modules workaround for volumes
      # https://stackoverflow.com/a/32785014
      - /usr/src/app/node_modules

  # This is the configuration for our PostgreSQL database container
  # Note the `postgres` name is important, in out Node app when we refer
  # to  `host: "postgres"` that value is mapped on the network to the 
  # address of this container.
  #postgres:
  #  image: postgres:14.1-alpine
  #  restart: always
  #  environment:
      # You can set the value of environment variables
      # in your docker-compose.yml file
      # Our Node app will use these to connect
      # to the database
   #   - POSTGRES_USER=postgres
   #   - POSTGRES_PASSWORD=postgres
   #   - POSTGRES_DB=postgres
   # ports:
      # Standard port for PostgreSQL databases
   #   - "5432:5432"
   # volumes:
      # When the PostgresSQL container is started it will run any scripts
      # provided in the `docker-entrypoint-initdb.d` directory, this connects
      # our seed file to that directory so that it gets run
    #  - ./database-seed.sql:/docker-entrypoint-initdb.d/database-seed.sql

  postgres:
    container_name: demo_postgres
    image: "postgres:12"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/data/postgres"
    volumes:
       - ./database-seed.sql:/docker-entrypoint-initdb.d/database-seed.sql
       - postgres:/data/postgres
    ports:
      - "15432:5432"
    restart: unless-stopped

  # PostgreSQL pgAdmin panel accessible at http://localhost:15433/
  pgadmin:
    container_name: demo_pgadmin
    image: "dpage/pgadmin4:4.24"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
       - pgadmin:/var/lib/pgadmin
       - ./docker_pgadmin_servers.json:/pgadmin4/servers.json
    ports:
      - "15433:80"
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "/bin/echo 'postgres:5432:*:postgres:password' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"
    restart: unless-stopped
